stream {

    map $ssl_preread_server_name:$server_port $namehttps {
        hostnames;
        
        *.rke2.home.local:443 cluster_https;
        rke2-cluster.home.local:6443 cluster_api;
        rke2-cluster.home.local:9345 cluster_comm;
        #default https_default_backend;
    }

    upstream cluster_https {
        server 192.168.0.121:443 max_fails=3 fail_timeout=10s;
        server 192.168.0.124:443 max_fails=3 fail_timeout=10s;
        server 192.168.0.125:443 max_fails=3 fail_timeout=10s;
    }

    upstream cluster_api {
        server 192.168.0.121:6443 max_fails=3 fail_timeout=10s;
        server 192.168.0.124:6443 max_fails=3 fail_timeout=10s;
        server 192.168.0.125:6443 max_fails=3 fail_timeout=10s;
    }

    upstream cluster_comm {
        server 192.168.0.121:9345 max_fails=3 fail_timeout=10s;
        server 192.168.0.124:9345 max_fails=3 fail_timeout=10s;
        server 192.168.0.125:9345 max_fails=3 fail_timeout=10s;
    }

    log_format stream_https_routing '$remote_addr [$time_local] '
                          'with SNI name "$ssl_preread_server_name" '
                          'on port "$server_port"'
                          'combined is "$ssl_preread_server_name:$server_port"'
                          'proxying to "$namehttps" '
                          '$protocol $status $bytes_sent $bytes_received '
                          '$session_time';
    
    server {
        listen 443;
        listen 6443;
        listen 9345;
        proxy_pass $namehttps;
        ssl_preread on;
        access_log /var/log/nginx/stream.log stream_https_routing;
    }
}